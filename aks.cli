az login

az group create --name rg-ammar-poc --location southcentralus

az acr create --resource-group rg-ammar-poc --name acrammarpoc --sku Basic

az acr login --name acrammarpoc

az acr list --resource-group rg-ammar-poc --query "[].{acrLoginServer:loginServer}" --output table

acrammarpoc.azurecr.io

#docker tag 

az acr login -n acrammarpoc

docker push acrammarpoc.azurecr.io/product:latest

az acr repository list --name acrammarpoc --output table

az acr repository show-tags --name acrammarpoc --repository product --output table

az aks create --resource-group rg-ammar-poc --name aks-ammar-poc --node-count 2 --generate-ssh-keys --attach-acr acrammarpoc

az aks get-credentials --resource-group rg-ammar-poc --name aks-ammar-poc

kubectl create namespace ingress-basic

helm repo add ingress-basic https://kubernetes.github.io/ingress-nginx

helm repo update

helm install nginx-ingress ingress-basic/ingress-nginx --namespace ingress-basic --set controller.replicaCount=2

helm install nginx-ingress ingress-basic/ingress-nginx --version 4.1.3 --namespace ingress-basic --create-namespace --set controller.replicaCount=2 --set controller.nodeSelector."kubernetes\.io/os"=linux --set controller.image.registry=acrammarpoc.azurecr.io --set controller.image.image=ingress-nginx/controller --set controller.image.tag=v1.2.1 --set controller.image.digest="" --set controller.admissionWebhooks.patch.nodeSelector."kubernetes\.io/os"=linux --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"=/healthz --set controller.admissionWebhooks.patch.image.registry=acrammarpoc.azurecr.io --set controller.admissionWebhooks.patch.image.image=ingress-nginx/kube-webhook-certgen --set controller.admissionWebhooks.patch.image.tag=v1.1.1 --set controller.admissionWebhooks.patch.image.digest="" --set defaultBackend.nodeSelector."kubernetes\.io/os"=linux --set defaultBackend.image.registry=acrammarpoc.azurecr.io --set defaultBackend.image.image=defaultbackend-amd64 --set defaultBackend.image.tag=1.5 --set defaultBackend.image.digest=""

kubectl logs nginx-ingress-ingress-nginx-controller -n ingress-basic

--------------------
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml

kubectl proxy

http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/
-------------------------

az network public-ip create --resource-group rg-ammar-poc --name ammar.fluor.com --sku Standard --allocation-method Static

az network lb create --resource-group rg-ammar-poc --name ammar-poc-load-balancer --sku Standard --public-ip-address ammar.fluor.com

az network public-ip show --resource-group rg-ammar-poc --name ammar.fluor.com --query ipAddress --output tsv

az network nsg rule list -g mc_rg-ammar-poc_aks-ammar-poc_southcentralus --nsg-name aks-agentpool-29872233-nsg

az aks show --resource-group rg-ammar-poc  --name aks-ammar-poc --query addonProfiles.httpApplicationRouting.config.HTTPApplicationRoutingZoneName -o table

aks-ammar-rg-ammar-poc-08e443-kk1huwbg.hcp.southcentralus.azmk8s.io

==================
kubectl logs -n ingress-basic nginx-ingress-ingress-nginx-controller-7b5fd4596d-djqq4

kubectl describe ingress nginx-ingress -n ingress-basic

-=================




REGISTRY_NAME=acrammarpoc
SOURCE_REGISTRY=k8s.gcr.io
CONTROLLER_IMAGE=ingress-nginx/controller
CONTROLLER_TAG=v1.2.1
PATCH_IMAGE=ingress-nginx/kube-webhook-certgen
PATCH_TAG=v1.1.1
DEFAULTBACKEND_IMAGE=defaultbackend-amd64
DEFAULTBACKEND_TAG=1.5

az acr import --name $REGISTRY_NAME --source $SOURCE_REGISTRY/$CONTROLLER_IMAGE:$CONTROLLER_TAG --image $CONTROLLER_IMAGE:$CONTROLLER_TAG
az acr import --name $REGISTRY_NAME --source $SOURCE_REGISTRY/$PATCH_IMAGE:$PATCH_TAG --image $PATCH_IMAGE:$PATCH_TAG
az acr import --name $REGISTRY_NAME --source $SOURCE_REGISTRY/$DEFAULTBACKEND_IMAGE:$DEFAULTBACKEND_TAG --image $DEFAULTBACKEND_IMAGE:$DEFAULTBACKEND_TAG

az acr import --name acrammarpoc --source k8s.gcr.io/ingress-nginx/controller:v1.2.1 --image ingress-nginx/controller:v1.2.1
az acr import --name acrammarpoc --source k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1 --image ingress-nginx/kube-webhook-certgen:v1.1.1
az acr import --name acrammarpoc --source k8s.gcr.io/defaultbackend-amd64:1.5 --image defaultbackend-amd64:1.5




kubectl run -it --rm aks-ingress-test --image=mcr.microsoft.com/dotnet/runtime-deps:6.0 --namespace ingress-basic

apt-get update && apt-get install -y curl

curl -L http://20.225.14.158/product

helm install ingress-nginx ingress-nginx/ingress-nginx \
    --version 4.1.3 \
    --namespace ingress-basic \
    --create-namespace \
    --set controller.replicaCount=2 \
    --set controller.nodeSelector."kubernetes\.io/os"=linux \
    --set controller.image.registry=$ACR_URL \
    --set controller.image.image=$CONTROLLER_IMAGE \
    --set controller.image.tag=$CONTROLLER_TAG \
    --set controller.image.digest="" \
    --set controller.admissionWebhooks.patch.nodeSelector."kubernetes\.io/os"=linux \
    --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"=/healthz \
    --set controller.admissionWebhooks.patch.image.registry=$ACR_URL \
    --set controller.admissionWebhooks.patch.image.image=$PATCH_IMAGE \
    --set controller.admissionWebhooks.patch.image.tag=$PATCH_TAG \
    --set controller.admissionWebhooks.patch.image.digest="" \
    --set defaultBackend.nodeSelector."kubernetes\.io/os"=linux \
    --set defaultBackend.image.registry=$ACR_URL \
    --set defaultBackend.image.image=$DEFAULTBACKEND_IMAGE \
    --set defaultBackend.image.tag=$DEFAULTBACKEND_TAG \
    --set defaultBackend.image.digest=""
